import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,e as i,a as o,d as a,w as l,r as s,o as p,b as d}from"./app-CvT_P91O.js";const c={};function g(m,e){const t=s("RouteLink");return p(),r("div",null,[e[1]||(e[1]=i('<h2 id="pixelrnn" tabindex="-1"><a class="header-anchor" href="#pixelrnn"><span>PixelRNN</span></a></h2><ul><li><p>随机给一个像素，给予模型<strong>random</strong>值</p></li><li><p>本质上是根据已生成的结果生成新的输出，会考虑<strong>当前时间点</strong>之前的<strong>所有</strong>输出</p></li><li><p>一个像素一个像素生成</p></li></ul><h2 id="generative-adversarial-network-gan-生成对抗网络" tabindex="-1"><a class="header-anchor" href="#generative-adversarial-network-gan-生成对抗网络"><span>Generative Adversarial Network（GAN 生成对抗网络）</span></a></h2><p><strong>工作原理</strong></p><ul><li>两个网络同时训练，形成一个动态对抗系统</li><li>生成器学习生成更逼真的数据</li><li>判别器学习更准确地识别真假数据</li><li>当判别器无法识别生成器生成的数据是真是假时，生成器就成功了</li></ul><h3 id="generator-生成器" tabindex="-1"><a class="header-anchor" href="#generator-生成器"><span>Generator（生成器）</span></a></h3><p><strong>工作流程</strong></p><ul><li>接收<strong>随机噪声</strong>作为输入</li><li>尝试将这些噪声转换成看起来<strong>真实</strong>的数据(如图像、文本等)</li><li>目标是生成能够**&quot;欺骗&quot;**判别器的数据</li></ul><h3 id="discriminator-判别器" tabindex="-1"><a class="header-anchor" href="#discriminator-判别器"><span>Discriminator（判别器）</span></a></h3><p><strong>工作流程</strong></p><ul><li>接收真实数据样本和生成器创建的假数据样本</li><li>尝试区分哪些是真实的，哪些是假的</li><li>目标是正确地分类真实和生成的数据</li></ul><h3 id="divergence-散度" tabindex="-1"><a class="header-anchor" href="#divergence-散度"><span><strong>Divergence（散度）</strong></span></a></h3><p><em>是指两个概率分布之间的差异或距离的度量</em></p><ul><li><strong>目标函数</strong>：GAN的训练目标可以被表述为<strong>最小化</strong>真实数据分布和生成数据分布之间的某种散度</li></ul><h3 id="mode-collapse" tabindex="-1"><a class="header-anchor" href="#mode-collapse"><span>Mode Collapse</span></a></h3>',15)),o("p",null,[a(t,{to:"/dl/cv/DiffusionModel.html"},{default:l(()=>[...e[0]||(e[0]=[d("Diffusion（扩散模型）",-1)])]),_:1})])])}const f=n(c,[["render",g]]),x=JSON.parse('{"path":"/dl/primer/GenerativeModels.html","title":"常见的生成式模型","lang":"zh-CN","frontmatter":{"title":"常见的生成式模型","description":"蛮多都过时了，可以了解","author":"xbZhong","isOriginal":true,"article":true,"category":"primer","timeline":true,"icon":"oui:generate","date":"2024-06-18T00:00:00.000Z","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见的生成式模型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-10T12:45:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xbZhong\\"}]}"],["meta",{"property":"og:url","content":"https://xbzhong.cn/dl/primer/GenerativeModels.html"}],["meta",{"property":"og:site_name","content":"阿b的博客"}],["meta",{"property":"og:title","content":"常见的生成式模型"}],["meta",{"property":"og:description","content":"蛮多都过时了，可以了解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-10T12:45:16.000Z"}],["meta",{"property":"article:author","content":"xbZhong"}],["meta",{"property":"article:published_time","content":"2024-06-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-10T12:45:16.000Z"}]]},"git":{"createdTime":1760100316000,"updatedTime":1760100316000,"contributors":[{"name":"BO","username":"BO","email":"2396768163@qq.com","commits":1,"url":"https://github.com/BO"}]},"readingTime":{"minutes":1.22,"words":367},"filePathRelative":"dl/primer/GenerativeModels.md","excerpt":"<h2>PixelRNN</h2>\\n<ul>\\n<li>\\n<p>随机给一个像素，给予模型<strong>random</strong>值</p>\\n</li>\\n<li>\\n<p>本质上是根据已生成的结果生成新的输出，会考虑<strong>当前时间点</strong>之前的<strong>所有</strong>输出</p>\\n</li>\\n<li>\\n<p>一个像素一个像素生成</p>\\n</li>\\n</ul>\\n<h2>Generative Adversarial Network（GAN 生成对抗网络）</h2>\\n<p><strong>工作原理</strong></p>\\n<ul>\\n<li>两个网络同时训练，形成一个动态对抗系统</li>\\n<li>生成器学习生成更逼真的数据</li>\\n<li>判别器学习更准确地识别真假数据</li>\\n<li>当判别器无法识别生成器生成的数据是真是假时，生成器就成功了</li>\\n</ul>"}');export{f as comp,x as data};
